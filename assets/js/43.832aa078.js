(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{281:function(t,a,s){t.exports=s.p+"assets/img/image-20240111161517219.f3b21c62.png"},399:function(t,a,s){"use strict";s.r(a);var n=s(14),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"认识-java-对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#认识-java-对象"}},[t._v("#")]),t._v(" 认识 Java 对象")]),t._v(" "),a("p",[t._v("先了解一下对象的组成")]),t._v(" "),a("h2",{attrs:{id:"对象的组成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象的组成"}},[t._v("#")]),t._v(" 对象的组成")]),t._v(" "),a("p",[a("img",{attrs:{src:s(281),alt:"image-20240111161517219"}}),t._v("\n可以看到，一个对象由："),a("strong",[t._v("对象头，实例数据，对齐填充组成")]),t._v("。")]),t._v(" "),a("h4",{attrs:{id:"_1、对象头"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、对象头"}},[t._v("#")]),t._v(" 1、对象头")]),t._v(" "),a("h5",{attrs:{id:"markword"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#markword"}},[t._v("#")]),t._v(" markword")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("锁状态")]),t._v(" "),a("th",[t._v("29 bit 或 61 bit")]),t._v(" "),a("th",[t._v("1 bit 是否是偏向锁？")]),t._v(" "),a("th",[t._v("2 bit 锁标志位")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("无锁")]),t._v(" "),a("td",[t._v("31bit的Hashcode")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("01")])]),t._v(" "),a("tr",[a("td",[t._v("偏向锁")]),t._v(" "),a("td",[t._v("线程ID")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("01")])]),t._v(" "),a("tr",[a("td",[t._v("轻量级锁")]),t._v(" "),a("td",[t._v("指向栈中锁记录的指针")]),t._v(" "),a("td",[t._v("此时这一位不用于标识偏向锁")]),t._v(" "),a("td",[t._v("00")])]),t._v(" "),a("tr",[a("td",[t._v("重量级锁")]),t._v(" "),a("td",[t._v("指向互斥量（重量级锁）的指针")]),t._v(" "),a("td",[t._v("此时这一位不用于标识偏向锁")]),t._v(" "),a("td",[t._v("10")])]),t._v(" "),a("tr",[a("td",[t._v("GC标记")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("此时这一位不用于标识偏向锁")]),t._v(" "),a("td",[t._v("11")])])])]),t._v(" "),a("h5",{attrs:{id:"class指针"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#class指针"}},[t._v("#")]),t._v(" Class指针")]),t._v(" "),a("p",[t._v("4字节的指针（指向类元信息地址，class），用于访问Class对象。")]),t._v(" "),a("p",[t._v("默认开启指针压缩，所以是4字节，关闭的话为8字节。")]),t._v(" "),a("h5",{attrs:{id:"数组的length"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组的length"}},[t._v("#")]),t._v(" 数组的length")]),t._v(" "),a("p",[t._v("这个好理解，数组的"),a("code",[t._v(".length")]),t._v("就是拿到这个信息")]),t._v(" "),a("p",[t._v("这里length四个字节，也解释了一个数组的最大长度，是max_int。")]),t._v(" "),a("h4",{attrs:{id:"_2、实例数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、实例数据"}},[t._v("#")]),t._v(" 2、实例数据")]),t._v(" "),a("p",[t._v("就是类自己的类似"),a("code",[t._v('private String name = "123"')]),t._v("这样的信息。")]),t._v(" "),a("p",[t._v("像父类的private的属性，也是有的，但访问不了。")]),t._v(" "),a("h4",{attrs:{id:"_3、对齐填充"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、对齐填充"}},[t._v("#")]),t._v(" 3、对齐填充")]),t._v(" "),a("p",[t._v("对齐填充使得对象实例的字节数是"),a("strong",[t._v("8的倍数")]),t._v("。")]),t._v(" "),a("blockquote",[a("p",[t._v("64位JVM的寻址空间更大，但是会带来性能的损耗；大多数计算机都是高效的64位处理器，顾名思义，一次能处理64位的指令，即8个字节的数据，HotSpot VM的自动内存管理系统也就遵循了这个要求，这样子性能更高，处理更快。")])]),t._v(" "),a("p",[t._v("因此，new一个对象，实际就是要处理上述三大部分。一般有：")]),t._v(" "),a("ul",[a("li",[t._v("markword")]),t._v(" "),a("li",[t._v("Class对象")]),t._v(" "),a("li",[t._v("实例数据")])]),t._v(" "),a("h2",{attrs:{id:"new对象的过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#new对象的过程"}},[t._v("#")]),t._v(" new对象的过程")]),t._v(" "),a("h4",{attrs:{id:"一、检查是否类加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、检查是否类加载"}},[t._v("#")]),t._v(" 一、检查是否类加载")]),t._v(" "),a("p",[t._v("检查常量池中是否能定位到这个类的「符号引用」。")]),t._v(" "),a("p",[t._v("如果没有Class对象，会先执行类加载过程的1~5步骤。类加载的过程可以参考："),a("a",{attrs:{href:"https://juejin.cn/post/7276698909782327352",target:"_blank",rel:"noopener noreferrer"}},[t._v("JVM架构之类加载系统，深入理解类加载器"),a("OutboundLink")],1)]),t._v(" "),a("h4",{attrs:{id:"二、为实例分配内存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、为实例分配内存"}},[t._v("#")]),t._v(" 二、为实例分配内存")]),t._v(" "),a("p",[t._v("首先因为堆全局唯一，因此需要保证线程安全：")]),t._v(" "),a("p",[t._v("方案是："),a("strong",[t._v("CAS+TLAB")])]),t._v(" "),a("p",[a("strong",[t._v("TLAB")]),t._v("：Thread Local Allocation Buffer。就是在Eden区直接划分一块给某个线程私有。后续的new对象都在这块私有区域分配。")]),t._v(" "),a("blockquote",[a("p",[t._v("划分区域也会线程不安全，也需要CAS或锁，但是一种"),a("strong",[t._v("锁粗化")]),t._v("的原理，比单单分配一个对象效率要高得多。")])]),t._v(" "),a("p",[a("strong",[t._v("在TLAB不够时，采用CAS的方式分配内存。")])]),t._v(" "),a("blockquote",[a("p",[t._v("CAS：compare and swap，保证线程安全")])]),t._v(" "),a("p",[t._v("然后开始具体地分配内存")]),t._v(" "),a("p",[t._v("对象所需的内存大小在类加载完成后便可确定，具体如何分配有两种方式：")]),t._v(" "),a("h5",{attrs:{id:"没有内存碎片-指针碰撞"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#没有内存碎片-指针碰撞"}},[t._v("#")]),t._v(" "),a("strong",[t._v("没有内存碎片：指针碰撞")])]),t._v(" "),a("p",[t._v("用过的内存全部整合到一边，没有用过的内存放在另一边，中间有一个分界指针，只需要向着没用过的内存方向将该指针移动对象内存大小位置")]),t._v(" "),a("h5",{attrs:{id:"有内存碎片-空闲列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有内存碎片-空闲列表"}},[t._v("#")]),t._v(" "),a("strong",[t._v("有内存碎片：空闲列表")])]),t._v(" "),a("p",[t._v("虚拟机会维护一个列表，该列表中会记录哪些内存块是可用的，在分配的时候，找一块儿足够大的内存块儿来划分给对象实例，最后更新列表记录。")]),t._v(" "),a("blockquote",[a("p",[t._v("有没有内存碎片取决于GC算法，清除有内存碎片，复制，整理没有内存碎片")])]),t._v(" "),a("h4",{attrs:{id:"三、初始化实例变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、初始化实例变量"}},[t._v("#")]),t._v(" 三、初始化实例变量")]),t._v(" "),a("p",[t._v("将方法区内对实例变量的定义拷贝一份到堆区，然后赋默认值（一般是0）。")]),t._v(" "),a("h4",{attrs:{id:"四、设置对象头"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、设置对象头"}},[t._v("#")]),t._v(" 四、设置对象头")]),t._v(" "),a("p",[t._v("即初始化mark word，class指针等信息")]),t._v(" "),a("blockquote",[a("p",[t._v("对象头是下图绿色的部分")])]),t._v(" "),a("p",[a("img",{attrs:{src:s(281),alt:"image-20240111161517219"}})]),t._v(" "),a("h4",{attrs:{id:"五、初始化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、初始化"}},[t._v("#")]),t._v(" 五、初始化")]),t._v(" "),a("p",[t._v("先初始化父类再初始化子类。")]),t._v(" "),a("p",[t._v("初始化时先执行"),a("strong",[t._v("实例代码块")]),t._v("然后是"),a("strong",[t._v("构造方法")]),t._v("。")]),t._v(" "),a("p",[t._v("这样一个真正可用的对象才算完全产生出来")]),t._v(" "),a("h3",{attrs:{id:"开发视角-代码块-构造方法-声明调用顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发视角-代码块-构造方法-声明调用顺序"}},[t._v("#")]),t._v(" 开发视角：代码块/构造方法/声明调用顺序")]),t._v(" "),a("p",[t._v("我们现在已经学了Class对象的加载，实例对象的加载，这里来梳理一下，"),a("strong",[t._v("父子类的静态（非静态）代码块，构造方法，静态（非静态）字段的调用顺序")])]),t._v(" "),a("p",[t._v("Class加载完全早于实例对象的加载，因此：")]),t._v(" "),a("ol",[a("li",[t._v("父类的：静态变量声明，静态代码块")]),t._v(" "),a("li",[t._v("子类的：静态变量声明，静态代码块")])]),t._v(" "),a("p",[t._v("这里的1~2是类加载的（5）初始化阶段")]),t._v(" "),a("ol",[a("li",[t._v("父类的：实例变量声明，普通语句块")]),t._v(" "),a("li",[t._v("父类的：构造函数")]),t._v(" "),a("li",[t._v("子类的：实例变量声明，普通语句块")]),t._v(" "),a("li",[t._v("子类的：构造函数")])]),t._v(" "),a("p",[t._v("这里的3~6是new对象实例的（5）初始化阶段")]),t._v(" "),a("blockquote",[a("p",[t._v("没有被声明，代码块，构造函数指定的变量就是默认值（一般为零值）")]),t._v(" "),a("ul",[a("li",[t._v("对于静态的字段由类加载步骤（3）准备阶段保证")]),t._v(" "),a("li",[t._v("对于普通的字段由new对象步骤（3）初始化实例变量阶段保证")])])]),t._v(" "),a("h4",{attrs:{id:"声明语句和代码块哪个先执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#声明语句和代码块哪个先执行"}},[t._v("#")]),t._v(" 声明语句和代码块哪个先执行")]),t._v(" "),a("p",[t._v("为什么把声明和代码块放在同一行内？它们之间的顺序如何？")]),t._v(" "),a("p",[t._v("实际上，这取决于"),a("strong",[t._v("代码的位置")]),t._v("。")]),t._v(" "),a("p",[t._v("我们知道在初始化之前，无论是静态字段，还是普通字段，都会为它们分配空间并赋予默认值，一般为零值。")]),t._v(" "),a("p",[t._v("因此：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("public static int a = 1;\n")])])]),a("p",[t._v("像这样的语句，「为a分配空间」 与 「声明a的值」 ，并不会被一起执行。")]),t._v(" "),a("p",[t._v("完全可以这样写：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("static {  a = 2; }\npublic static int a = 1;\n")])])]),a("p",[t._v("此时访问a为1")]),t._v(" "),a("p",[t._v("交换这两行代码的位置：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("public static int a = 1;\nstatic {  a = 2; }\n")])])]),a("p",[t._v("此时访问a为2")]),t._v(" "),a("p",[t._v("普通字段完全一样，多个代码块也是这样")]),t._v(" "),a("p",[t._v("因此，"),a("strong",[t._v("变量声明与代码块的执行顺序取决于代码的位置顺序")])]),t._v(" "),a("h2",{attrs:{id:"对象如何被访问"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象如何被访问"}},[t._v("#")]),t._v(" 对象如何被访问")]),t._v(" "),a("h4",{attrs:{id:"句柄"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#句柄"}},[t._v("#")]),t._v(" 句柄")]),t._v(" "),a("p",[t._v("在堆中划分一块区域作为句柄池，指针指向句柄，句柄指向堆内存空间")]),t._v(" "),a("h4",{attrs:{id:"直接指针"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#直接指针"}},[t._v("#")]),t._v(" 直接指针")]),t._v(" "),a("p",[t._v("直接指针就是指向堆内存空间的指针")]),t._v(" "),a("h4",{attrs:{id:"对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对比"}},[t._v("#")]),t._v(" 对比")]),t._v(" "),a("p",[t._v("直接指针显然访问速度更快。句柄的好处是对象被移动时（比如GC），只改变句柄中实例数据指针，"),a("code",[t._v("reference")]),t._v("本身不用改变。")]),t._v(" "),a("p",[t._v("HotSpot VM采用"),a("strong",[t._v("直接指针")])]),t._v(" "),a("h2",{attrs:{id:"引用类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引用类型"}},[t._v("#")]),t._v(" 引用类型")]),t._v(" "),a("p",[t._v("直接指针提供的功能太少，因此JDK1.2之后Java提供了四个级别的引用，以下按引用强度排序：")]),t._v(" "),a("h4",{attrs:{id:"_1、强引用-strongreference"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、强引用-strongreference"}},[t._v("#")]),t._v(" "),a("strong",[t._v("1、强引用（StrongReference）")])]),t._v(" "),a("p",[t._v("最普遍的引用，垃圾回收器绝不会回收它，宁愿抛出 OutOfMemoryError 错误，使程序异常终止。")]),t._v(" "),a("p",[t._v("new出来的对象的引用都是强引用。像下面这行代码，obj就是个强引用，存储在栈帧的局部变量表中。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("Object obj = new Object();\n")])])]),a("p",[t._v("执行 "),a("code",[t._v("obj=null;")]),t._v("后，这个obj原本指向的Object实例才可能被GC")]),t._v(" "),a("h4",{attrs:{id:"_2、软引用-softreference"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、软引用-softreference"}},[t._v("#")]),t._v(" 2、软引用（SoftReference）")]),t._v(" "),a("p",[t._v("如果内存空间足够，垃圾回收器就不会回收它，如果内存空间不足了，就会回收这些对象的内存。"),a("strong",[t._v("可有可无")]),t._v("。可用来实现内存敏感的高速缓存。")]),t._v(" "),a("h4",{attrs:{id:"_3、弱引用-weakreference"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、弱引用-weakreference"}},[t._v("#")]),t._v(" 3、"),a("strong",[t._v("弱引用（WeakReference）")])]),t._v(" "),a("p",[a("strong",[t._v("值得被回收")]),t._v("。一旦发现了只具有弱引用的对象，不管当前内存空间足够与否，都会回收它的内存。")]),t._v(" "),a("blockquote",[a("p",[t._v("ThreadLocal的key是弱引用")])]),t._v(" "),a("h4",{attrs:{id:"_4、虚引用-phantomreference"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、虚引用-phantomreference"}},[t._v("#")]),t._v(" 4、"),a("strong",[t._v("虚引用（PhantomReference）")])]),t._v(" "),a("p",[a("strong",[t._v("虚引用：主要用来跟踪对象被垃圾回收的活动")]),t._v("。虚引用不会决定GC机制对一个对象的回收权。如果一个对象仅持有虚引用，那么它就和没有任何引用一样，在任何时候都可能被垃圾回收。")]),t._v(" "),a("p",[t._v("在程序设计中一般很少使用弱引用与虚引用，使用软引用的情况较多，这是因为"),a("strong",[t._v("软引用可以加速 JVM 对垃圾内存的回收速度，可以维护系统的运行安全，防止内存溢出（OutOfMemory）等问题的产生")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"查看java对象的内存布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看java对象的内存布局"}},[t._v("#")]),t._v(" 查看Java对象的内存布局")]),t._v(" "),a("h3",{attrs:{id:"_1、jdk自带"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、jdk自带"}},[t._v("#")]),t._v(" 1、JDK自带")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"java.vm.name"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Java HotSpot(TM) "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectSizeCalculator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getObjectSize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3L")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h3",{attrs:{id:"_2、jol工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、jol工具"}},[t._v("#")]),t._v(" 2、jol工具")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("openjdk"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jol"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("groupId"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("jol"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("core"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("artifactId"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.16")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("version"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dependency"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 基本使用")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" o "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实例信息")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassLayout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toPrintable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// class类信息")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassLayout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toPrintable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h3",{attrs:{id:"_3、instrumentation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、instrumentation"}},[t._v("#")]),t._v(" 3、Instrumentation")]),t._v(" "),a("p",[t._v("获取Instrumentation对象，先引入依赖项")]),t._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("net.bytebuddy"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("byte-buddy-agent"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("1.12.10"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("net.bytebuddy"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("byte-buddy"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("1.12.10"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("net"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bytebuddy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("agent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ByteBuddyAgent")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lang"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("instrument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Instrumentation")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ByteBuddyAgent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Instrumentation")]),t._v(" instrumentation "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ByteBuddyAgent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstrumentation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    inst"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getObjectSize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("最后来看看Object类，它是Java所有类的父类。")]),t._v(" "),a("h2",{attrs:{id:"浅析object类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浅析object类"}},[t._v("#")]),t._v(" 浅析Object类")]),t._v(" "),a("h3",{attrs:{id:"object有哪些方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#object有哪些方法"}},[t._v("#")]),t._v(" Object有哪些方法")]),t._v(" "),a("p",[t._v("hashcode，equals，toString，wait，notify，clone")]),t._v(" "),a("h3",{attrs:{id:"为什么wait-notify在object内而不是thread"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么wait-notify在object内而不是thread"}},[t._v("#")]),t._v(" 为什么wait/notify在Object内而不是Thread")]),t._v(" "),a("p",[t._v("因为等待/通知机制设计是为了解决线程间通信的。")]),t._v(" "),a("p",[t._v("线程通信是否可执行，是由资源决定的，而非线程。")]),t._v(" "),a("p",[t._v("一个线程使用完毕某个资源，别的线程才能使用。")]),t._v(" "),a("p",[t._v("线程知道自己是因为要获取哪个资源而被阻塞，关注的是资源，而不在乎是因为谁（具体哪个线程）。")]),t._v(" "),a("h3",{attrs:{id:"输出一个没有重写tostring方法的对象会发生什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输出一个没有重写tostring方法的对象会发生什么"}},[t._v("#")]),t._v(" 输出一个没有重写toString方法的对象会发生什么")]),t._v(" "),a("p",[t._v("输出Person类得到 Person@3c1")]),t._v(" "),a("p",[t._v("输出数组得到 [I@4554617c")]),t._v(" "),a("p",[t._v("输出new Object的对象得到 java.lang.Object@4554617c")]),t._v(" "),a("p",[t._v("一个类没有重写toString方法，也会有这个方法")]),t._v(" "),a("p",[t._v("因为Object类下已经做了实现")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('public String toString() {\n    return getClass().getName() + "@" + Integer.toHexString(hashCode());\n}\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("也就是会输出 "),a("code",[t._v("类名 + @ + hashcode的值")]),t._v("（hashcode16进制）")]),t._v(" "),a("h3",{attrs:{id:"new-一个object多少字节"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#new-一个object多少字节"}},[t._v("#")]),t._v(" new 一个Object多少字节")]),t._v(" "),a("p",[t._v("这跟硬件是有关系的。还有是否开启指针压缩等。所以没有确切的答案。但可以肯定的是：一定会是8的倍数。开启指针压缩的情况下，为16字节。8字节mark word，4字节指针，以及对齐填充。另外要区分堆与栈。在栈上也会生成一个4字节的指针。")]),t._v(" "),a("p",[t._v("小结一下：new 一个Object，在本地栈生成一个4字节的指针，指向一块堆内存区域。这块堆内存区域存储了markword，实例数据，和一个指针指向方法区class对象（或者用句柄实现，但sunhotspot是指针实现），以及对齐填充")]),t._v(" "),a("h4",{attrs:{id:"参考文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文档"}},[t._v("#")]),t._v(" 参考文档")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://javaguide.cn",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java内存区域详解（重点）"),a("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);