(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{358:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"源码中的-thread-sleep-0"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#源码中的-thread-sleep-0"}},[t._v("#")]),t._v(" 源码中的 Thread.sleep(0)")]),t._v(" "),s("p",[t._v("老版本的 RocketMQ，Dubbo 的源码中，都出现了 "),s("code",[t._v("Thread.sleep(0)")]),t._v("，这行代码有什么用呢？")]),t._v(" "),s("p",[t._v("先说结论：让线程进入「安全点」，让GC线程可能被执行，避免STW过久")]),t._v(" "),s("p",[t._v("削峰填谷的思想，很长时间进行一次GC可能导致STW过久，因此主动在大循环内部发起GC")]),t._v(" "),s("blockquote",[s("p",[t._v("STW "),s("strong",[t._v("Stop-The-World")]),t._v("：就是停顿所有线程，CMS做GC的第一、三步骤都需要STW")])]),t._v(" "),s("p",[t._v("我们首先来了解下面两个概念：")]),t._v(" "),s("h3",{attrs:{id:"安全点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安全点"}},[t._v("#")]),t._v(" 安全点")]),t._v(" "),s("p",[t._v("特定的某些位置。当线程运行到这类位置时，"),s("strong",[t._v("堆对象状态是确定一致的")]),t._v("。")]),t._v(" "),s("p",[t._v("安全点是在程序执行期间的所有"),s("code",[t._v("GC Root")]),t._v("已知并且"),s("strong",[t._v("所有堆对象的内容一致")]),t._v("的点。")]),t._v(" "),s("p",[s("strong",[t._v("如果要触发一次GC，那么JVM里的所有Java线程都必须到达GC safepoint。")])]),t._v(" "),s("p",[t._v("HotSpot中，安全点位置主要在：")]),t._v(" "),s("ol",[s("li",[t._v("方法返回之前")]),t._v(" "),s("li",[t._v("调用某个方法之后")]),t._v(" "),s("li",[t._v("抛出异常的位置")]),t._v(" "),s("li",[t._v("循环的末尾")])]),t._v(" "),s("p",[t._v("目的就是避免程序长时间无法进入safepoint")]),t._v(" "),s("p",[t._v("如果有线程一直没有进入到安全点，就会导致GC时JVM停顿时间延长。比如写了一个超大的循环导致线程一直没有进入到安全点，GC前停顿了8秒。")]),t._v(" "),s("h3",{attrs:{id:"可数-不可数循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可数-不可数循环"}},[t._v("#")]),t._v(" 可数/不可数循环")]),t._v(" "),s("p",[s("code",[t._v("for ( int i = 0; i <= n ; i++ )")])]),t._v(" "),s("p",[t._v("可数循环就是循环变量是个int或更小，不可数循环是long。")]),t._v(" "),s("p",[t._v("**可数循环仅在循环结束后有安全点。**因为安全点过多也会影响性能。")]),t._v(" "),s("p",[t._v("所以如果担心大循环延缓了GC线程，只需要改成不可数循环即可解决。")]),t._v(" "),s("p",[t._v("那当然另一种方法，就是调用 Thread.sleep(0)。")]),t._v(" "),s("h3",{attrs:{id:"为什么thread-sleep-0-也能解决"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么thread-sleep-0-也能解决"}},[t._v("#")]),t._v(" 为什么Thread.sleep(0)也能解决")]),t._v(" "),s("p",[t._v("一个线程在运行 native 方法后，返回到 Java 线程后，必须进行一次 safepoint 的检测。\nnative 方法不受JVM管理，因此JVM就认为该线程进入了safepoint。")]),t._v(" "),s("p",[t._v("而Thread.sleep(0)正是一个native 方法。")]),t._v(" "),s("p",[t._v("因此调用 sleep 方法的线程会进入 Safepoint。")]),t._v(" "),s("h2",{attrs:{id:"安全点-可数循环引发的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安全点-可数循环引发的问题"}},[t._v("#")]),t._v(" 安全点+可数循环引发的问题")]),t._v(" "),s("p",[t._v("下面这段代码，主线程会等待t1,t2执行完才输出num")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MainTest")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AtomicInteger")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AtomicInteger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Runnable")]),t._v(" runnable"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000000000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAndAdd")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" t1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("runnable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" t2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("runnable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        t1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        t2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sleep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"num = "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br")])]),s("p",[t._v("原因："),s("strong",[t._v("JVM会周期性地让所有线程进入安全点")]),t._v("。")]),t._v(" "),s("p",[t._v("周期由 "),s("code",[t._v("-XX:GuaranteedSafepointInterval")]),t._v(" 选项控制，该选项默认为 1000ms。")]),t._v(" "),s("p",[t._v("主线程sleep了1000ms，两个大循环执行也远大于1000ms，而sleep和循环结束都是安全点")]),t._v(" "),s("p",[t._v("因此主线程继续阻塞等待其他java线程执行循环完毕进入安全点。")]),t._v(" "),s("h3",{attrs:{id:"为什么要进入安全点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要进入安全点"}},[t._v("#")]),t._v(" 为什么要进入安全点")]),t._v(" "),s("p",[t._v("VMThread ：JVM内部线程，负责协调其它线程达到安全点以及执行 VM 操作。")]),t._v(" "),s("p",[s("strong",[t._v("VM 操作是什么？")])]),t._v(" "),s("p",[t._v("CMS 的初始标记和最终标记都是 ，又比如 thread dump，线程挂起以及偏向锁的撤销等等都是 VM 操作。")]),t._v(" "),s("p",[t._v("VMThread 里面有个 VMOperationQueue 队列，用于存放一个一个连在一起的 VM 操作。loop() 方法是 VMThread 的核心方法，该方法不断从 VMOperationQueue 队列中获取待执行的 VM 操作，然后调用每种 VM 操作具体的实现 evaluate() 方法执行不同的逻辑。达到安全点后还会判断是否有stub 缓存要清理")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("stub 缓存 : JVM 执行期间的编译解释代码缓存")])])]),t._v(" "),s("p",[t._v("关掉"),s("code",[t._v("-XX:GuaranteedSafepointInterval")]),t._v("这个参数也有可能会造成一些未知错误。设置为0，不会有这个问题。")]),t._v(" "),s("p",[t._v("让主线程直接输出num的解决方案：")]),t._v(" "),s("ul",[s("li",[t._v("sleep100ms")]),t._v(" "),s("li",[t._v("修改JVM参数，周期暂停参数设置为2000ms")]),t._v(" "),s("li",[s("code",[t._v("-XX:+UseCountedLoopSafepoints")]),t._v(" 选项可以关闭安全点轮询的优化。也就是在可数循环中也会有安全点。")]),t._v(" "),s("li",[t._v("JDK10以上版本实现 Loop Strip Mining  优化，解决了在 counted loop 中安全点轮询的问题，而且没有太多开销，也会按照预期输出")]),t._v(" "),s("li",[t._v("long / sleep(0)方案")])]),t._v(" "),s("h3",{attrs:{id:"小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),s("p",[t._v("在大循环里执行Thread.sleep(0)，使得该线程进入安全点，避免了GC STW过久的问题。但更简洁的做法是把循环变量从 int 改为 long。")]),t._v(" "),s("h3",{attrs:{id:"参考文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考文档"}},[t._v("#")]),t._v(" 参考文档")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.cn/post/7139741080597037063#heading-0",target:"_blank",rel:"noopener noreferrer"}},[t._v("没有二十年功力，写不出Thread.sleep(0)这一行“看似无用”的代码！"),s("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);