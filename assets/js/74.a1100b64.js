(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{397:function(s,a,t){"use strict";t.r(a);var e=t(14),r=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"索引基数-索引区分度好坏的指标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引基数-索引区分度好坏的指标"}},[s._v("#")]),s._v(" 索引基数：索引区分度好坏的指标")]),s._v(" "),a("p",[s._v("索引基数：一个索引上不同的值的个数。")]),s._v(" "),a("p",[s._v("那么基数越大，索引的区分度越好。")]),s._v(" "),a("h4",{attrs:{id:"查看索引基数-show-index"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看索引基数-show-index"}},[s._v("#")]),s._v(" 查看索引基数：show index")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Cardinality 就代表索引基数的值")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h4",{attrs:{id:"mysql如何计算索引基数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql如何计算索引基数"}},[s._v("#")]),s._v(" MySQL如何计算索引基数")]),s._v(" "),a("p",[s._v("首先，索引基数是不精确的。因为计算整张表代价太大了，因此"),a("strong",[s._v("MySQL采取「采样统计」的方法")]),s._v("。")]),s._v(" "),a("h5",{attrs:{id:"参数n与m"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参数n与m"}},[s._v("#")]),s._v(" 参数N与M")]),s._v(" "),a("p",[a("code",[s._v("innodb_stats_auto_recalc")]),s._v(" 为 1时，MySQL会定期异步执行「采样统计」，有两个参数需要了解：")]),s._v(" "),a("ul",[a("li",[s._v("N，代表采样的大小，InnoDB默认会选择N个数据页，统计这些页面上的不同值，得到一个平均值，然后乘以这个索引的页面数")]),s._v(" "),a("li",[s._v("M，代表索引统计的触发，当变更的数据行数超过1/M的时候，会自动触发重新做一次索引统计")])]),s._v(" "),a("h4",{attrs:{id:"存储索引统计的方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储索引统计的方式"}},[s._v("#")]),s._v(" 存储索引统计的方式")]),s._v(" "),a("p",[s._v("innodb_index_stats 存储了索引的统计数据，每一条记录对应着一个索引的一个统计项的数据")]),s._v(" "),a("blockquote",[a("p",[s._v("innodb_table_stats 存储了表的统计数据，每一条记录对应着一个表的统计数据")])]),s._v(" "),a("p",[s._v("在MySQL中，有两种存储索引统计的方式，可以通过设置参数"),a("code",[s._v("innodb_stats_persistent")]),s._v("的值来选择：")]),s._v(" "),a("ul",[a("li",[s._v("设置为on的时候，表示统计信息会"),a("strong",[s._v("持久化")]),s._v("存储。这时，默认的N是20，M是10。")]),s._v(" "),a("li",[s._v("设置为off的时候，表示统计信息只存储在"),a("strong",[s._v("内存")]),s._v("中。这时，默认的N是8，M是16。")])]),s._v(" "),a("p",[a("code",[s._v("innodb_stats_persistent")]),s._v("默认为ON。")]),s._v(" "),a("h4",{attrs:{id:"重新统计索引信息-analyze"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重新统计索引信息-analyze"}},[s._v("#")]),s._v(" 重新统计索引信息：analyze")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("analyze")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" t\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("可以主动做一次索引统计，但analyze加了 MDL 读锁并且是同步进行，所以会暂时阻塞系统")]),s._v(" "),a("h4",{attrs:{id:"调用analyze的时机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调用analyze的时机"}},[s._v("#")]),s._v(" 调用analyze的时机")]),s._v(" "),a("p",[a("code",[s._v("explain SQL")]),s._v("预估的 rows 值跟实际情况差距比较大")]),s._v(" "),a("p",[a("code",[s._v("SHOW TABLE STATUS")]),s._v("的 rows 值跟实际情况差距比较大")]),s._v(" "),a("h1",{attrs:{id:"mysql如何选择索引-cbo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql如何选择索引-cbo"}},[s._v("#")]),s._v(" MySQL如何选择索引：CBO")]),s._v(" "),a("p",[s._v("CBO，Cost-based Optimizer，基于成本的优化器。")]),s._v(" "),a("p",[s._v("当多个索引都可以被选择，CBO会基于Cost选择执行成本最低的方案，作为执行计划来执行。")]),s._v(" "),a("p",[s._v("Cost的计算公式如下：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("Cost  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Server Cost "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("Engine")]),s._v(" Cost\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" CPU Cost "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" IO Cost\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("server_cost、engine_cost记录了各种成本的计算：")]),s._v(" "),a("p",[a("img",{attrs:{src:"index.assets/image-20231117192953632.png",alt:"image-20231117192953632"}})]),s._v(" "),a("p",[s._v("可以看到，创建基于磁盘的临时表开销非常大")]),s._v(" "),a("p",[s._v("通过EXPLAIN的FORMAT=json可以看到MySQL计算的Cost信息：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("         "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cost_info"')]),s._v(": {\n           "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"read_cost"')]),s._v(": "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"49024.00"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# IO Cost(Engine Cost)")]),s._v("\n           "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"eval_cost"')]),s._v(": "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"577875.50"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# CPU Cost(Server Cost)")]),s._v("\n           "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"prefix_cost"')]),s._v(": "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"626899.50"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 总成本")]),s._v("\n           "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"data_read_per_join"')]),s._v(": "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2G"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 总的读取记录字节数")]),s._v("\n         }\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"索引失效的根本原因"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引失效的根本原因"}},[s._v("#")]),s._v(" 索引失效的根本原因")]),s._v(" "),a("p",[s._v("所以说，索引失效的根本原因，就是CBO通过计算发现：全表扫描或者另一个索引优于走你期望的索引。")]),s._v(" "),a("p",[s._v("当你的二级索引需要大量回表查询时，也许CBO经过计算就会觉得全表扫描更好。")]),s._v(" "),a("h3",{attrs:{id:"cbo不靠谱怎么办"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cbo不靠谱怎么办"}},[s._v("#")]),s._v(" CBO不靠谱怎么办")]),s._v(" "),a("h4",{attrs:{id:"_1、调整cbo参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、调整cbo参数"}},[s._v("#")]),s._v(" 1、调整CBO参数")]),s._v(" "),a("p",[s._v("如果数据库使用是传统的 HDD 盘，性能较差，读取性能要比内存慢 50 倍，可以使用如下SQL")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" \nengine_cost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("engine_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("device_type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("cost_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("cost_value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("last_update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("comment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'InnoDB'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'io_block_read_cost'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12.5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CURRENT_TIMESTAMP")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Using HDD for InnoDB'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nFLUSH OPTIMIZER_COSTS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h4",{attrs:{id:"_2、强制走索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、强制走索引"}},[s._v("#")]),s._v(" 2、强制走索引")]),s._v(" "),a("p",[s._v("使用 force index 强行选择一个索引")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("user")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FORCE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" NAME"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xxx'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h4",{attrs:{id:"_3、数据倾斜-直方图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、数据倾斜-直方图"}},[s._v("#")]),s._v(" 3、数据倾斜：直方图")]),s._v(" "),a("p",[s._v("若数据存在倾斜，可以创建直方图，让优化器知道数据的分布，从而更好地选择执行计划。")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ANALYZE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" orders \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UPDATE")]),s._v(" HISTOGRAM "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" o_orderstatus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("a",{attrs:{href:"http://learn.lianglianglee.com/%e4%b8%93%e6%a0%8f/MySQL%e5%ae%9e%e6%88%98%e5%ae%9d%e5%85%b8/11%20%20%e7%b4%a2%e5%bc%95%e5%87%ba%e9%94%99%ef%bc%9a%e8%af%b7%e7%90%86%e8%a7%a3%20CBO%20%e7%9a%84%e5%b7%a5%e4%bd%9c%e5%8e%9f%e7%90%86.md",target:"_blank",rel:"noopener noreferrer"}},[s._v("索引出错：请理解 CBO 的工作原理"),a("OutboundLink")],1)]),s._v(" "),a("h1",{attrs:{id:"📍实战-怎么对字符串加索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#📍实战-怎么对字符串加索引"}},[s._v("#")]),s._v(" 📍实战：怎么对字符串加索引")]),s._v(" "),a("h4",{attrs:{id:"创建完整索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建完整索引"}},[s._v("#")]),s._v(" 创建完整索引")]),s._v(" "),a("p",[s._v("如果字符串长度较小，可以考虑直接创建完整索引")]),s._v(" "),a("p",[s._v("缺点是：占用空间大，所以字符串长度较小的情况这就不是问题")]),s._v(" "),a("p",[s._v("优点是：如果能够索引覆盖从而避免回表，性能还是不错的")]),s._v(" "),a("h4",{attrs:{id:"创建前缀索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建前缀索引"}},[s._v("#")]),s._v(" 创建前缀索引")]),s._v(" "),a("p",[s._v("传统的前缀索引，如果前缀的区分度足够高，还是相当好的。对性能没有太大负担，并且节约空间。")]),s._v(" "),a("h4",{attrs:{id:"后缀索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#后缀索引"}},[s._v("#")]),s._v(" 后缀索引")]),s._v(" "),a("p",[s._v("可以通过reverse函数转化为后缀")]),s._v(" "),a("p",[s._v("缺点是不支持范围查询，只支持等值查询")]),s._v(" "),a("h4",{attrs:{id:"hash索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hash索引"}},[s._v("#")]),s._v(" HASH索引")]),s._v(" "),a("p",[s._v("通过crc32在HASH值上建索引")]),s._v(" "),a("p",[s._v("缺点是不支持范围查询，只支持等值查询")]),s._v(" "),a("h4",{attrs:{id:"全文索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全文索引"}},[s._v("#")]),s._v(" 全文索引")]),s._v(" "),a("p",[s._v("这是特殊的索引，取决于是否有应用场景。")])])}),[],!1,null,null,null);a.default=r.exports}}]);