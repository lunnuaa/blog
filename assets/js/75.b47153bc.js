(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{405:function(_,t,v){"use strict";v.r(t);var a=v(14),r=Object(a.a)({},(function(){var _=this,t=_._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h1",{attrs:{id:"mysql如何存储行-记录-数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mysql如何存储行-记录-数据"}},[_._v("#")]),_._v(" MySQL如何存储行（记录）数据")]),_._v(" "),t("h2",{attrs:{id:"行格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#行格式"}},[_._v("#")]),_._v(" 行格式")]),_._v(" "),t("p",[_._v("InnoDB 提供了 4 种行格式，分别是 Redundant（淘汰）、Compact（旧）、Dynamic和 Compressed 行格式。")]),_._v(" "),t("p",[_._v("Dynamic 和 Compressed都是对Compact的改进，从 MySQL5.7 版本之后，默认使用 Dynamic 行格式。")]),_._v(" "),t("p",[_._v("下面以Compact行格式为例：")]),_._v(" "),t("p",[t("img",{attrs:{src:"row_format.assets/COMPACT.drawio.png",alt:""}})]),_._v(" "),t("h3",{attrs:{id:"_1、变长字段的长度"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、变长字段的长度"}},[_._v("#")]),_._v(" 1、变长字段的长度")]),_._v(" "),t("p",[_._v("像VARCHAR、TEXT、BLOB 都属于变长字段，因此需要一个额外的值来记录它们的长度大小。")]),_._v(" "),t("p",[_._v("变长字段长度的大小：")]),_._v(" "),t("ul",[t("li",[_._v("如果变长字段"),t("strong",[_._v("允许存储的最大字节数")]),_._v("小于等于 255 字节，就会用 1 字节表示「变长字段长度」；")]),_._v(" "),t("li",[_._v("如果变长字段允许存储的最大字节数大于 255 字节，就会用 2 字节表示「变长字段长度」；")])]),_._v(" "),t("h3",{attrs:{id:"_2、null值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、null值"}},[_._v("#")]),_._v(" 2、NULL值")]),_._v(" "),t("p",[_._v("NULL 标识，所占的位数必须是8的倍数，因此尽管只有一个字段允许为NULL，NULL也会占用1个字节。")]),_._v(" "),t("h3",{attrs:{id:"_3、头信息-固定5字节"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、头信息-固定5字节"}},[_._v("#")]),_._v(" 3、头信息：固定5字节")]),_._v(" "),t("table",[t("thead",[t("tr",[t("th",[_._v("头信息组成部分")]),_._v(" "),t("th",[_._v("大小(b)")]),_._v(" "),t("th",[_._v("意义")])])]),_._v(" "),t("tbody",[t("tr",[t("td",[_._v("预留")]),_._v(" "),t("td",[_._v("2")]),_._v(" "),t("td",[_._v("本就必须8的倍数，留着万一以后有用")])]),_._v(" "),t("tr",[t("td",[_._v("delete_mask🚩")]),_._v(" "),t("td",[_._v("1")]),_._v(" "),t("td",[_._v("是否被SQL - delete语句所删除")])]),_._v(" "),t("tr",[t("td",[_._v("min_rec_mask")]),_._v(" "),t("td",[_._v("1")]),_._v(" "),t("td",[_._v("非叶子节点的最小记录标记")])]),_._v(" "),t("tr",[t("td",[_._v("n_owned")]),_._v(" "),t("td",[_._v("4")]),_._v(" "),t("td",[_._v("当前记录拥有的记录数")])]),_._v(" "),t("tr",[t("td",[_._v("heap_no")]),_._v(" "),t("td",[_._v("13")]),_._v(" "),t("td",[_._v("在记录堆的位置信息")])]),_._v(" "),t("tr",[t("td",[_._v("record_type🚩")]),_._v(" "),t("td",[_._v("3")]),_._v(" "),t("td",[_._v("当前记录的类型，0表示普通记录，1表示非叶子节点记录"),t("br"),_._v("2表示最小记录，3表示最大记录")])]),_._v(" "),t("tr",[t("td",[_._v("next_record")]),_._v(" "),t("td",[_._v("16")]),_._v(" "),t("td",[_._v("下一条行记录的位置（相对位置）")])])])]),_._v(" "),t("h3",{attrs:{id:"_4、隐藏字段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、隐藏字段"}},[_._v("#")]),_._v(" 4、隐藏字段")]),_._v(" "),t("h4",{attrs:{id:"_4-1-row-id-隐式主键"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-row-id-隐式主键"}},[_._v("#")]),_._v(" 4.1 row_id：隐式主键")]),_._v(" "),t("ul",[t("li",[t("p",[_._v("有主键就不会有这个字段。")])]),_._v(" "),t("li",[t("p",[_._v("如果没有主键，就会选择第一个：")]),_._v(" "),t("ul",[t("li",[_._v("非NULL的")]),_._v(" "),t("li",[_._v("唯一的")])]),_._v(" "),t("p",[_._v("同时满足以上两个条件的字段作为主键")])]),_._v(" "),t("li",[t("p",[_._v("上面两条都不满足，MySQL才会隐式生成一个row_id作为主键，6个字节。")])])]),_._v(" "),t("h4",{attrs:{id:"_4-2-trx-id-数据从哪来"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-trx-id-数据从哪来"}},[_._v("#")]),_._v(" 4.2 trx_id：数据从哪来")]),_._v(" "),t("p",[_._v("事务id，表示这个数据是由哪个事务生成的。 trx_id是必需的，占用 6 个字节。")]),_._v(" "),t("h4",{attrs:{id:"_4-3-roll-pointer-旧数据指针"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-roll-pointer-旧数据指针"}},[_._v("#")]),_._v(" 4.3 roll_pointer：旧数据指针")]),_._v(" "),t("p",[_._v("这条记录上一个版本的指针。roll_pointer 是必需的，占用 7 个字节。")]),_._v(" "),t("blockquote",[t("p",[_._v("因此，一般都有主键，隐藏字段占13字节，没有主键时，为19字节。")])]),_._v(" "),t("h3",{attrs:{id:"以varchar为例-理解行格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#以varchar为例-理解行格式"}},[_._v("#")]),_._v(" 以VARCHAR为例，理解行格式")]),_._v(" "),t("p",[_._v("长度可变的列如果太长，无法存储在 B  树页面上，就会存储在单独分配的磁盘页面（称为溢出页面）上。此类列被称为非页面列。非页面列的值存储在溢出页的单链列表中，每一列都有自己的一个或多个溢出页列表。根据列的长度，可变长度列值的全部或前缀都存储在 B 树中，以避免浪费存储空间和读取单独的页面。")]),_._v(" "),t("p",[_._v("因此一个varchar(n)字段，实际由三个部分组成：")]),_._v(" "),t("ul",[t("li",[_._v("真实数据")]),_._v(" "),t("li",[_._v("真实数据占用的字节数")]),_._v(" "),t("li",[_._v("NULL 标识，如果不允许为NULL，这部分不需要")])]),_._v(" "),t("blockquote",[t("p",[_._v("Compact会将可变长度列值（VARCHAR、VARBINARY 以及 BLOB 和 TEXT 类型）的前 768 字节存储在 B 树节点内的索引记录中，其余部分存储在溢出页中。Dynamic这一点上就完全不同。")])]),_._v(" "),t("h3",{attrs:{id:"dynamic的改进"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dynamic的改进"}},[_._v("#")]),_._v(" Dynamic的改进")]),_._v(" "),t("h4",{attrs:{id:"_1、变长列的存储"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、变长列的存储"}},[_._v("#")]),_._v(" 1、变长列的存储")]),_._v(" "),t("p",[_._v("InnoDB可以完全在页面外存储长变长列值（VARCHAR、VARBINARY以及BLOB和TEXT类型），聚簇索引记录只包含一个指向溢出页面的20字节指针。")]),_._v(" "),t("p",[_._v("当记录过长时，会选择最长的列进行页面外存储，直到聚类索引记录适合 B 树页面为止。")]),_._v(" "),t("h4",{attrs:{id:"_2、对前缀索引的支持"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、对前缀索引的支持"}},[_._v("#")]),_._v(" 2、对前缀索引的支持")]),_._v(" "),t("p",[_._v("支持最大 3072 字节的索引键前缀")]),_._v(" "),t("p",[t("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/innodb-row-format.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("详细请见官网"),t("OutboundLink")],1)]),_._v(" "),t("h2",{attrs:{id:"最大的行记录的大小-65535"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#最大的行记录的大小-65535"}},[_._v("#")]),_._v(" 最大的行记录的大小：65535")]),_._v(" "),t("p",[t("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/column-count-limit.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("Limits on Table Column Count and Row Size"),t("OutboundLink")],1)]),_._v(" "),t("p",[_._v("MySQL 规定除了 TEXT、BLOBs 这种大对象类型之外，其他所有的列（不包括「隐藏列」和「记录头信息」，但包括「变长字段长度列表」和 「NULL 值列表」）占用的字节长度加起来不能超过 65535 个字节。")]),_._v(" "),t("h2",{attrs:{id:"行溢出-off-page"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#行溢出-off-page"}},[_._v("#")]),_._v(" 行溢出：off-page")]),_._v(" "),t("blockquote",[t("p",[_._v("要了解行溢出，需要首先了解「页」的概念")])]),_._v(" "),t("p",[_._v("尽管通常我们说页由行记录组成，但是，一页只有16384B，而行记录不算大对象的上限是 65535B，这显然超过了一个页能够存储的空间。为了解决这个问题（一行记录的大小超过一个页的大小），MySQL的对策是：\n「行溢出」。")]),_._v(" "),t("h4",{attrs:{id:"具体行为"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#具体行为"}},[_._v("#")]),_._v(" 具体行为")]),_._v(" "),t("p",[_._v("当记录过长时，MySQL会选择最长的列进行页面外存储，直到聚类索引记录适合 B 树页面为止。")]),_._v(" "),t("blockquote",[t("p",[_._v("只有变长的列才会被off-page存储，当然当CHAR的最大字节数超过768字节，也可以off-page")])]),_._v(" "),t("p",[_._v("MySQL使用「溢出页」专门存放这样的数据。")]),_._v(" "),t("p",[_._v("发生行溢出时，行记录存在一个20字节的指针，指向溢出页，从而拿到实际的数据。Dynamic的原始行记录只有一个指针，而Compact是：部分行数据加指针。")]),_._v(" "),t("h3",{attrs:{id:"行溢出的真正阈值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#行溢出的真正阈值"}},[_._v("#")]),_._v(" 行溢出的真正阈值")]),_._v(" "),t("p",[_._v("实际上，当行记录超过页的大小的一半，就会发生行移除。因此，真正的阈值取决于"),t("code",[_._v("innodb_page_size")]),_._v("。")]),_._v(" "),t("p",[t("code",[_._v("innodb_page_size")]),_._v("：这个的默认值是16384B，即16K。这个数据是可以修改的，比如 4KB, 8KB, 32KB。")]),_._v(" "),t("p",[_._v("但不变的是：阈值总是"),t("code",[_._v("innodb_page_size")]),_._v("的一半不到一点。")]),_._v(" "),t("p",[_._v("官方的用词是："),t("code",[_._v("is slightly less than")]),_._v("，这是因为要除去一些页的信息，比如8字节的校验和等等，所以并不是刚好8KB就发生行溢出，会比8KB略微小那么一点点。")])])}),[],!1,null,null,null);t.default=r.exports}}]);